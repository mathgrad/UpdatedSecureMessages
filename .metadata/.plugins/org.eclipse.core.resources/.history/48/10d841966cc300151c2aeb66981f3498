/**
 * 
 */
package securemessages.encryption.main;

import java.util.HashMap;

/**
 * The purpose of this class is to override the aski table and replace it with
 * one that will be easier to handle
 * 
 * @author Joshua
 * 
 */
public class TextToNumbers {

	/**
	 * This is a hashmap of characters to integers. this comment is to help
	 * remind future attempts that it should be characters! not strings!
	 */
	public HashMap<Character, Integer> textMap;

	/**
	 * Generates a new TextToNumbers object
	 */
	public TextToNumbers() {
		textMap = new HashMap<Character, Integer>();
		createTextMap();
	}

	/**
	 * Handles the creation of the textMap
	 * 
	 * a is 0; A is 27;
	 * 
	 */
	private void createTextMap() {
		textMap.put('a', 0);
		textMap.put('b', 1);
		textMap.put('c', 2);
		textMap.put('d', 3);
		textMap.put('e', 4);
		textMap.put('f', 5);
		textMap.put('g', 6);
		textMap.put('h', 7);
		textMap.put('i', 8);
		textMap.put('j', 9);
		textMap.put('k', 10);
		textMap.put('l', 11);
		textMap.put('m', 12);
		textMap.put('n', 13);
		textMap.put('o', 14);
		textMap.put('p', 15);
		textMap.put('q', 16);
		textMap.put('r', 17);
		textMap.put('s', 18);
		textMap.put('t', 19);
		textMap.put('u', 20);
		textMap.put('v', 21);
		textMap.put('w', 22);
		textMap.put('x', 23);
		textMap.put('y', 24);
		textMap.put('z', 25);
	}

	/**
	 * To be used for much of the encryption process
	 * 
	 * @return size of the textMap
	 * 
	 */
	public int getTextMapSize() {
		return textMap.size();
	}
}
